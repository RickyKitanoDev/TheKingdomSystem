// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheKingdomSystem.Management.Database.DatabaseContext;

namespace TheKingdomSystem.Management.Database.Migrations
{
    [DbContext(typeof(ManagementDataContext))]
    [Migration("20211107140730_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("TheKingdomSystem.Management.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext")
                        .HasColumnName("City");

                    b.Property<string>("Country")
                        .HasColumnType("longtext")
                        .HasColumnName("Country");

                    b.Property<string>("PostalCode")
                        .HasColumnType("longtext")
                        .HasColumnName("PostalCode");

                    b.Property<string>("Street")
                        .HasColumnType("longtext")
                        .HasColumnName("Street");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("TheKingdomSystem.Management.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<int?>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("TheKingdomSystem.Management.Domain.Entities.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Desctiption");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("JobTitle");
                });

            modelBuilder.Entity("TheKingdomSystem.Management.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("longtext")
                        .HasColumnName("Login");

                    b.Property<string>("Password")
                        .HasColumnType("longtext")
                        .HasColumnName("Password");

                    b.Property<string>("Status")
                        .HasColumnType("longtext")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TheKingdomSystem.Management.Domain.Entities.Employee", b =>
                {
                    b.HasOne("TheKingdomSystem.Management.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("TheKingdomSystem.Management.Domain.Entities.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId");

                    b.Navigation("Address");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("TheKingdomSystem.Management.Domain.Entities.User", b =>
                {
                    b.HasOne("TheKingdomSystem.Management.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
